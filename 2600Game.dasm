;------------------------------------------------
;
; untitled
; Atari VCS Game 
; Created by Jacob McCanty and Stevie Yakkel on 2014-01-12.
;
; Copyright (c) 2014 __MyCompanyName__. All rights reserved.
;
; Use with joystick controllers
;
;------------------------------------------------
	processor 	6502
	include 	vcs.h
	include 	macro.h

;------------------------------------------------
; Constants
;------------------------------------------------
BLACK = #$00

PF_REFLECT = %00000001
PF_BALL_SIZE4 = %00100000
PLAYER1G =	%11111000
PLAYER_RIGHT = %11110000
PLAYER_LEFT = %00010000
PLAYER2_RIGHT = %00001111
PLAYER2_LEFT = %00000001

;------------------------------------------------
; RAM
;------------------------------------------------
    SEG.U   variables
    ORG     $80

bgcolor				.byte
frame				.byte
score				.byte
starting_value_lo	.byte
starting_value_hi	.byte
starting_value_lo2	.byte
starting_value_hi2	.byte
horiz       		.byte
vert        		.byte
pv					.byte
p2v					.byte
loopCounter			.byte
counter				.byte
;ballVert			.byte
score2				.byte
;------------------------------------------------
; Start of ROM
;------------------------------------------------
	SEG   Bank0
	ORG   $F000       	; 4k ROM start point

Start 
	CLEAN_START			; Clear RAM and Registers
	
	;lda                	#PF_REFLECT | PF_BALL_SIZE4
    ;sta                	CTRLPF
    lda                	#2
    sta                	ENABL
    
    lda                	#0
    sta                	horiz
	sta					counter
    lda                	#35
    sta                	vert
	sta					pv
	lda					#45
	sta					p2v
;	sta					ballVert

	lda				  	#%00000000
	sta				  	GRP0
	lda				  	#$C3
	sta 				COLUP0
	
	lda				  	#%00000000
	sta				  	GRP1
	lda				  	#$40
	sta 				COLUP1
	
	lda                	#$80
    sta                	COLUBK

	lda                	#$47
    sta                	COLUPF
	lda				   	#%00000000
	sta					PF0
	sta					PF1
	sta					PF2 


;------------------------------------------------
; Vertical Blank
;------------------------------------------------
MainLoop
	lda		#0
	sta		VBLANK
	VERTICAL_SYNC
    lda     #43
    sta     TIM64T

	;***** Vertical Blank code goes here
	
	lda		#5
	sta		loopCounter
	jmp		.ballStuff
.scoreStuff	
	;increment score
	clc
	sed
	lda                score
	adc                #10
	sta                score
	cld
	;calculate starting_value for low bits of score
	lda					score
	and					#%00001111
	;store current score
	sta					starting_value_lo
	;multiply it by 4
	asl
	asl
	
	clc
	adc					starting_value_lo
	sta					starting_value_lo
	;Calculate starting x for the hi bits
	lda					score
	;Shifts the 4 hi bits to the right, 4 places
	lsr
	lsr
	lsr
	lsr
	;store current score
	sta					starting_value_hi
	;multiply it by 4
	clc
	asl
	asl
	
	clc
	adc					starting_value_hi
	sta					starting_value_hi
	lda					#0
	sta					ENABL
	jmp					.waitForVBlank
.scoreStuff2	
	;increment score
	clc
	sed
	lda                score2
	adc                #10
	sta                score2
	cld
	;calculate starting_value for low bits of score
	lda					score2
	and					#%00001111
	;store current score
	sta					starting_value_lo2
	;multiply it by 4
	asl
	asl

	clc
	adc					starting_value_lo2
	sta					starting_value_lo2
	;Calculate starting x for the hi bits
	lda					score2
	;Shifts the 4 hi bits to the right, 4 places
	lsr
	lsr
	lsr
	lsr
	;store current score
	sta					starting_value_hi2
	;multiply it by 4
	clc
	asl
	asl

	clc
	adc					starting_value_hi2
	sta					starting_value_hi2
	lda					#0
	sta					ENABL
	jmp					.waitForVBlank
	
.ballStuff
		lda					counter
		clc
		sbc					#200
		beq					.enableBall
		lda					counter
		clc
		sbc					#100
		beq					.disableBall
		jmp					.spriteStuff

.enableBall
		lda					#0
		sta					counter
		lda					#2
		sta					ENABL
		sta					RESBL
		jmp					.spriteStuff
.disableBall
		lda					#0
		sta					ENABL
.spriteStuff
		;lda				CXP0FB
		;and				#%10000000
		;bne				.jumpToSpriteStuff2
        lda             SWCHA
        and             #%10010000
        beq             .spriteDiagUpR
        lda             SWCHA
        and             #%01010000
        beq             .spriteDiagUpL
        lda             SWCHA
        and             #%10100000
        beq             .spriteDiagDownR
        lda             SWCHA
        and             #%01100000
        beq             .spriteDiagDownL
        lda             SWCHA
        and             #%10000000
        beq             .jumpTospriteRight
        lda             SWCHA
        and             #%01000000
        beq             .jumpTospriteLeft
        lda             SWCHA
        and             #%00010000
        beq             .spriteUp
        lda             SWCHA
        and             #%00100000
        beq             .spriteDown
        jmp             .spriteStuff2
.jumpTospriteRight
		jmp				.spriteRight
.jumpTospriteLeft
		jmp				.spriteLeft
.jumpToSpriteStuff2
		jmp				.spriteStuff2
.spriteDiagUpR
		lda				CXP0FB
		and				#%10000000
		bne				.spriteDiagDownLCont
.spriteDiagUpRCont
        inc                pv
        inc                                        pv
        lda                #PLAYER_RIGHT
        sta                HMP0
        lda                                        #%00000000
        sta                                        HMP1
        jmp                .hmove2
.spriteDiagDownR
		lda				CXP0FB
		and				#%10000000
		bne				.spriteDiagUpLCont
.spriteDiagDownRCont
        dec                                        pv
        dec                pv
        lda                #PLAYER_RIGHT
        sta                HMP0
        lda                                        #%00000000
        sta                                        HMP1
        jmp                .hmove2
.spriteDiagUpL
		lda				CXP0FB
		and				#%10000000
		bne				.spriteDiagDownRCont
.spriteDiagUpLCont
        inc                                        pv
        inc                pv
        lda                #PLAYER_LEFT
        sta                HMP0
        lda                                        #%00000000
        sta                                        HMP1
        jmp                .hmove2
.spriteDiagDownL
		lda				CXP0FB
		and				#%10000000
		bne				.spriteDiagUpRCont
.spriteDiagDownLCont
        dec                                        pv
        dec                pv
        lda                #PLAYER_LEFT
        sta                HMP0
        lda                                        #%00000000
        sta                                        HMP1
        jmp                .hmove2
.spriteDown
		lda				CXP0FB
		and				#%10000000
		bne				.spriteUpCont
.spriteDownCont
        dec                                        pv
        dec                pv
        lda                                        #%00000000
        sta                                        HMP1
        jmp                .hmove2
.spriteUp
		lda				CXP0FB
		and				#%10000000
		bne				.spriteDownCont
.spriteUpCont
        inc                                        pv
        inc                pv
        lda                                        #%00000000
        sta                                        HMP1
        jmp                .hmove2
.spriteRight
        ;00010000 moves left 1
        ;1001000  moves right 1
        ;follow this pattern when using HMOVE
        ;sta        WSYNC
        ;sta        HMOVE
		lda				CXP0FB
		and				#%10000000
		bne				.spriteLeftCont
.spriteRightCont
        lda                #PLAYER_RIGHT
        sta                HMP0
        lda                                        #%00000000
        sta                                        HMP1
        jmp                .hmove2

.spriteLeft
		lda				CXP0FB
		and				#%10000000
		bne				.spriteRightCont
.spriteLeftCont
        lda                #PLAYER_LEFT
        sta                HMP0
        lda                                        #%00000000
        sta                                        HMP1

.hmove2
        sta                WSYNC
        sta                HMOVE


.spriteStuff2
        lda             SWCHA
        eor                                        #%11110000
        and             #%00001001
        beq             .spriteDiagUpR2
        lda             SWCHA
        eor                                        #%11110000
        and             #%00000101
        beq             .spriteDiagUpL2
        lda             SWCHA
        eor                                        #%11110000
        and             #%00001010
        beq             .spriteDiagDownR2
        lda             SWCHA
        eor                                        #%11110000
        and             #%00000110
        beq             .spriteDiagDownL2
        lda             SWCHA
        eor                                        #%11110000
        and             #%00001000
        beq             .jumpTospriteRight2
        lda             SWCHA
        eor                                        #%11110000
        and             #%00000100
        beq             .jumpTospriteLeft2
        lda             SWCHA
        eor                                        #%11110000
        and             #%00000001
        beq             .spriteUp2
        lda             SWCHA
        eor                                        #%11110000
        and             #%00000010
        beq             .spriteDown2
        jmp             .checkBallCollision
.jumpTospriteRight2
		jmp				.spriteRight2
.jumpTospriteLeft2
		jmp				.spriteLeft2
.jumpToHmove3
		;jmp				.waitForVBlank
		jmp				.hmove3
.spriteDiagUpR2
		lda				CXP1FB
		and				#%10000000
		bne				.spriteDiagDownL2Cont
.spriteDiagUpR2Cont
        inc                p2v
        inc                p2v
        lda                #PLAYER_RIGHT
        sta                HMP1
        lda                                        #%00000000
        sta                                        HMP0
        jmp                .hmove3
.spriteDiagDownR2
		lda				CXP1FB
		and				#%10000000
		bne				.spriteDiagUpL2Cont
.spriteDiagDownR2Cont
        dec                p2v
        dec                p2v
        lda                #PLAYER_RIGHT
        sta                HMP1
        lda                                        #%00000000
        sta                                        HMP0
        jmp                .hmove3
.spriteDiagUpL2
		lda				CXP1FB
		and				#%10000000
		bne				.spriteDiagDownR2Cont
.spriteDiagUpL2Cont
        inc                p2v
        inc                p2v
        lda                #PLAYER_LEFT
        sta                HMP1
        lda                                        #%00000000
        sta                                        HMP0
        jmp                .hmove3
.spriteDiagDownL2
		lda				CXP1FB
		and				#%10000000
		bne				.spriteDiagUpR2Cont
.spriteDiagDownL2Cont
        dec                p2v
        dec                p2v
        lda                #PLAYER_LEFT
        sta                HMP1
        lda                                        #%00000000
        sta                                        HMP0
        jmp                .hmove3
.spriteDown2
		lda				CXP1FB
		and				#%10000000
		bne				.spriteUp2Cont
.spriteDown2Cont
        dec                p2v
        dec                p2v
        lda                                        #%00000000
        sta                                        HMP1
        jmp                .hmove3
.spriteUp2
		lda				CXP1FB
		and				#%10000000
		bne				.spriteDown2Cont
.spriteUp2Cont
        inc                p2v
        inc                p2v
        lda                                        #%00000000
        sta                                        HMP1
        jmp                .hmove3
.spriteRight2
        ;00010000 moves left 1
        ;1001000  moves right 1
        ;follow this pattern when using HMOVE
        ;sta        WSYNC
        ;sta        HMOVE
		lda				CXP1FB
		and				#%10000000
		bne				.spriteLeft2Cont
.spriteRight2Cont
        lda                #PLAYER_RIGHT
        sta                HMP1
        lda                                        #%00000000
        sta                                        HMP0
        jmp                .hmove3

.spriteLeft2
		lda				CXP1FB
		and				#%10000000
		bne				.spriteRight2Cont
.spriteLeft2Cont
        lda                #PLAYER_LEFT
        sta                HMP1
        lda                                        #%00000000
        sta                                        HMP0
.hmove3
        sta                WSYNC
        sta                HMOVE


.checkBallCollision
		;player0
		lda			 	CXP0FB
		and				#%01000000
		bne				.incrementScore
		;player1
		lda			 	CXP1FB
		and				#%01000000
		bne				.incrementScore2
		jmp				.waitForVBlank
.incrementScore
		jmp				.scoreStuff
.incrementScore2
		jmp				.scoreStuff2
.waitForVBlank
		lda				#%00000000
		sta				HMP0
		sta				   CXCLR
        lda                INTIM
        bne                .waitForVBlank
        sta                WSYNC

;------------------------------------------------
; Kernel
;------------------------------------------------	
DrawScreen
;Kernel goes here
	
	ldx				starting_value_hi
	ldy				starting_value_hi2
	lda				.zero_left,x
.drawScore
	sta				PF1
	nop
	nop
	nop
	nop
	nop
	nop
	nop
	lda				.zero_left,y
	;lda				#%11111111
	sta				PF1
	;sta				WSYNC
	nop
	nop
	nop
	nop
	sta				WSYNC
	inx
	iny
	lda				.zero_left,x
	sta				PF1
	dec				loopCounter
	bne				.drawScore
	
;drawing top of playfield
	lda             #%11111111
	sta             PF0
	sta             PF1
	sta             PF2
    
	sta				WSYNC
	sta				WSYNC
	sta				WSYNC
	sta				WSYNC
	sta				WSYNC
	sta				WSYNC
	sta				WSYNC
	sta				WSYNC
	sta				WSYNC
	sta				WSYNC
	sta				WSYNC
	ldx 			#169
	ldy				#0
	lda             #PF_REFLECT | PF_BALL_SIZE4
    sta             CTRLPF
	jmp				.playfieldLoop
	
.enableSprite
	lda				#PLAYER1G
	sta				GRP0
	jmp				.playfieldLoop2

.disableSprite
	lda				#%00000000
	sta				GRP0
	jmp				.playfieldLoop2
.enableSprite2
	lda				#PLAYER1G
	sta				GRP1
	jmp				.continueplayfieldloop

.disableSprite2
	lda				#%00000000
	sta				GRP1
	jmp				.continueplayfieldloop

.playfieldLoop
	txa
	sbc				pv
	adc				#5
	bcs				.enableSprite
	jmp				.disableSprite
.playfieldLoop2
	txa
	sbc				p2v
	adc				#5
	bcs				.enableSprite2
	jmp				.disableSprite2
	
.continueplayfieldloop
	sta				WSYNC
    lda            	#%00110000
    sta             PF0
	lda             .playfield_1,y
	sta				PF1
	lda				.playfield_2,y
    sta             PF2
	iny
	dex
	bne				.playfieldLoop

.endplayfieldloop
;drawing bottom of playfield
	lda             #%11111111
	sta             PF0
	sta             PF1
	sta             PF2
	
	sta				WSYNC
	sta				WSYNC
	sta				WSYNC
	sta				WSYNC
	sta				WSYNC
	sta				WSYNC
	sta				WSYNC
	sta				WSYNC
	

;.scanline
;	dex
;	sta		WSYNC
;	bne		.scanline

;------------------------------------------------
; Overscan
;------------------------------------------------
	lda		#%01000010
	sta		VBLANK
    lda		#36
    sta		TIM64T

	;***** Overscan Code goes here
	inc 	counter
	lda			#%00000000
	sta			CTRLPF

.waitForOverscan
	lda     INTIM
	bne     .waitForOverscan

	jmp		MainLoop

;------------------------------------------------
; ROM Tables
;------------------------------------------------
;***** ROM tables go here
.zero_left
        .byte       %00011111
        .byte       %01011111
        .byte       %01011111
        .byte       %01011111
        .byte       %00011111

.one_left
        .byte       %10111111
        .byte       %00111111
        .byte       %10111111
        .byte       %10111111
        .byte       %00011111

.two_left
        .byte       %00011111
        .byte       %11011111
        .byte       %00011111
        .byte       %01111111
        .byte       %00011111

.three_left
        .byte       %00011111
        .byte       %11011111
        .byte       %00011111
        .byte       %11011111
        .byte       %00011111

.four_left
        .byte       %01011111
        .byte       %01011111
        .byte       %00011111
        .byte       %11011111
        .byte       %11011111

.five_left
        .byte       %00011111
        .byte       %01111111
        .byte       %00011111
        .byte       %11011111
        .byte       %00011111

.six_left
        .byte       %00011111
        .byte       %01111111
        .byte       %00011111
        .byte       %01011111
        .byte       %00011111

.seven_left
        .byte       %00011111
        .byte       %11011111
        .byte       %11011111
        .byte       %11011111
        .byte       %11011111

.eight_left
        .byte       %00011111
        .byte       %01011111
        .byte       %00011111
        .byte       %01011111
        .byte       %00011111

.nine_left
        .byte       %00011111
        .byte       %01011111
        .byte       %00011111
        .byte       %11011111
        .byte       %00011111

.playfield_1
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		
		.byte		%00001111
		.byte		%00001111
		.byte		%00001111
		.byte		%00001111
		.byte		%00001111
		.byte		%00111111
		.byte		%00111111
		.byte		%00111111
		.byte		%00111111
		.byte		%00111111
		
		.byte		%00001111
		.byte		%00001111
		.byte		%00001111
		.byte		%00001111
		.byte		%00001111
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		
		.byte		%00110000
		.byte		%00110000
		.byte		%00110000
		.byte		%00110000
		.byte		%00110000
		.byte		%00111111
		.byte		%00111111
		.byte		%00111111
		.byte		%00111111
		.byte		%00111111
		
		.byte		%00110000
		.byte		%00110000
		.byte		%00110000
		.byte		%00110000
		.byte		%00110000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00110000
		.byte		%00110000
		.byte		%00110000
		.byte		%00110000
		.byte		%00110000
		
		.byte		%00111111
		.byte		%00111111
		.byte		%00111111
		.byte		%00111111
		.byte		%00111111
		.byte		%00110000
		.byte		%00110000
		.byte		%00110000
		.byte		%00110000
		.byte		%00110000
		
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		
.playfield_2
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		
		.byte		%11110000
		.byte		%11110000
		.byte		%11110000
		.byte		%11110000
		.byte		%11110000
		.byte		%11111111
		.byte		%11111111
		.byte		%11111111
		.byte		%11111111
		.byte		%11111111
		
		.byte		%11110000
		.byte		%11110000
		.byte		%11110000
		.byte		%11110000
		.byte		%11110000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		
		.byte		%00001111
		.byte		%00001111
		.byte		%00001111
		.byte		%00001111
		.byte		%00001111
		.byte		%11111111
		.byte		%11111111
		.byte		%11111111
		.byte		%11111111
		.byte		%11111111
		
		.byte		%00001111
		.byte		%00001111
		.byte		%00001111
		.byte		%00001111
		.byte		%00001111
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00001111
		.byte		%00001111
		.byte		%00001111
		.byte		%00001111
		.byte		%00001111
		
		.byte		%11111111
		.byte		%11111111
		.byte		%11111111
		.byte		%11111111
		.byte		%11111111
		.byte		%00001111
		.byte		%00001111
		.byte		%00001111
		.byte		%00001111
		.byte		%00001111
		
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%11111111
		.byte		%11111111
		.byte		%11111111
		.byte		%00001111
		.byte		%00001111
		.byte		%00001111
		.byte		%00001111
		
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		.byte		%00000000
		
		

;------------------------------------------------
; Interrupt Vectors
;------------------------------------------------
	echo [*-$F000]d, " ROM bytes used"
	ORG    $FFFA
	.word  Start         ; NMI
	.word  Start         ; RESET
	.word  Start         ; IRQ
    
	END